$date
  Fri Jan 21 00:03:25 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module alu_tb $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 8 # dataout[7:0] $end
$var reg 8 $ operation[7:0] $end
$var reg 1 % clk $end
$var reg 1 & z $end
$var reg 1 ' ovf $end
$var reg 1 ( cmp_alu $end
$scope module uut $end
$var reg 8 ) operation[7:0] $end
$var reg 1 * cmp_alu $end
$var reg 8 + a[7:0] $end
$var reg 8 , b[7:0] $end
$var reg 1 - clk $end
$var reg 8 . dataout[7:0] $end
$var reg 1 / z $end
$var reg 1 0 ovf $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00001010 !
b00000000 "
b00001010 #
b00000000 $
U%
0&
0'
0(
b00000000 )
0*
b00001010 +
b00000000 ,
U-
b00001010 .
0/
00
#1000000000
b00001001 !
b00000001 "
b00001001 +
b00000001 ,
#2000000000
b00001000 !
b00000010 "
b00001000 +
b00000010 ,
#3000000000
b00000111 !
b00000011 "
b00000111 +
b00000011 ,
#4000000000
b00000110 !
b00000100 "
b00000110 +
b00000100 ,
#5000000000
b00000101 !
b00000101 "
b00000101 +
b00000101 ,
#6000000000
b00000100 !
b00000110 "
b00000100 +
b00000110 ,
#7000000000
b00000011 !
b00000111 "
b00000011 +
b00000111 ,
#8000000000
b00000010 !
b00001000 "
b00000010 +
b00001000 ,
#9000000000
b00000001 !
b00001001 "
b00000001 +
b00001001 ,
#10000000000
b00000000 !
b00001010 "
b00000000 +
b00001010 ,
#11000000000
#12000000000
b00000000 "
b00000000 #
1&
b00000000 ,
b00000000 .
1/
#13000000000
b11111111 !
b00000001 "
0&
1'
b11111111 +
b00000001 ,
0/
10
#14000000000
b10101011 #
b10101011 $
1&
b10101011 )
b10101011 .
1/
#15000000000
b00000000 "
b00000000 #
b00000001 $
0'
b00000001 )
b00000000 ,
b00000000 .
00
#16000000000
b11110000 !
b00000001 "
b11110000 +
b00000001 ,
#17000000000
b10101011 !
b11111111 "
b10101011 #
0&
b10101011 +
b11111111 ,
b10101011 .
0/
#18000000000
b11111111 !
b11111111 #
b11111111 +
b11111111 .
#19000000000
b00000000 "
b00000010 $
b00000010 )
b00000000 ,
#20000000000
b00000000 !
b00000001 "
b00000001 #
b00000000 +
b00000001 ,
b00000001 .
#21000000000
b00000111 !
b00000000 "
b00000111 #
b00000011 $
b00000011 )
b00000111 +
b00000000 ,
b00000111 .
#22000000000
b00000110 !
b00000001 "
b00000101 #
b00000110 +
b00000001 ,
b00000101 .
#23000000000
b00000101 !
b00000010 "
b00000011 #
b00000101 +
b00000010 ,
b00000011 .
#24000000000
b00000100 !
b00000011 "
b00000001 #
b00000100 +
b00000011 ,
b00000001 .
#25000000000
b00000011 !
b00000100 "
b11111111 #
b00000011 +
b00000100 ,
b11111111 .
#26000000000
b00000010 !
b00000101 "
b11111101 #
b00000010 +
b00000101 ,
b11111101 .
#27000000000
b00000001 !
b00000110 "
b11111011 #
b00000001 +
b00000110 ,
b11111011 .
#28000000000
b00000000 !
b00000111 "
b11111001 #
b00000000 +
b00000111 ,
b11111001 .
#29000000000
b00000001 !
b00000001 "
b00000010 #
b00000100 $
b00000100 )
b00000001 +
b00000001 ,
b00000010 .
#30000000000
b11111111 !
b00000101 "
b00000000 #
b00000101 $
1&
b00000101 )
b11111111 +
b00000101 ,
b00000000 .
1/
#31000000000
b00000001 !
b00000001 "
b00000011 #
b00000110 $
0&
b00000110 )
b00000001 +
b00000001 ,
b00000011 .
0/
#32000000000
b11111111 !
b11111111 "
b00000000 #
b00000111 $
1&
b00000111 )
b11111111 +
b11111111 ,
b00000000 .
1/
#33000000000
b11111111 #
1(
1*
b11111111 .
#34000000000
