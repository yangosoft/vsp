$date
  Thu Jan 20 17:05:45 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module alu_tb $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 8 # dataout[7:0] $end
$var reg 8 $ operation[7:0] $end
$var reg 1 % clk $end
$var reg 1 & z $end
$var reg 1 ' ovf $end
$scope module uut $end
$var reg 8 ( operation[7:0] $end
$var reg 8 ) a[7:0] $end
$var reg 8 * b[7:0] $end
$var reg 1 + clk $end
$var reg 8 , dataout[7:0] $end
$var reg 1 - z $end
$var reg 1 . ovf $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000111 !
b00000000 "
b00000111 #
b00000000 $
U%
0&
0'
b00000000 (
b00000111 )
b00000000 *
U+
b00000111 ,
0-
0.
#1000000000
b00000110 !
b00000001 "
b00000110 )
b00000001 *
#2000000000
b00000101 !
b00000010 "
b00000101 )
b00000010 *
#3000000000
b00000100 !
b00000011 "
b00000100 )
b00000011 *
#4000000000
b00000011 !
b00000100 "
b00000011 )
b00000100 *
#5000000000
b00000010 !
b00000101 "
b00000010 )
b00000101 *
#6000000000
b00000001 !
b00000110 "
b00000001 )
b00000110 *
#7000000000
b00000000 !
b00000111 "
b00000000 )
b00000111 *
#8000000000
#9000000000
b00000000 "
b00000000 #
1&
b00000000 *
b00000000 ,
1-
#10000000000
b11111111 !
b00000001 "
0&
1'
b11111111 )
b00000001 *
0-
1.
#11000000000
b10101011 #
b10101011 $
1&
b10101011 (
b10101011 ,
1-
#12000000000
b00000000 "
b00000000 #
b00000001 $
0&
0'
b00000001 (
b00000000 *
b00000000 ,
0-
0.
#13000000000
b11110000 !
b00000001 "
b11110000 )
b00000001 *
#14000000000
b10101011 !
b11111111 "
b10101011 #
b10101011 )
b11111111 *
b10101011 ,
#15000000000
b11111111 !
b11111111 #
b11111111 )
b11111111 ,
#16000000000
