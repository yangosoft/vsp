$date
  Thu Jan 27 18:55:13 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module bank_register_tb $end
$var reg 16 ! d[15:0] $end
$var reg 3 " add_a[2:0] $end
$var reg 3 # add_b[2:0] $end
$var reg 3 $ add_d[2:0] $end
$var reg 1 % wrd $end
$var reg 1 & clk $end
$var reg 16 ' a[15:0] $end
$var reg 16 ( b[15:0] $end
$scope module uut $end
$var reg 16 ) a[15:0] $end
$var reg 16 * b[15:0] $end
$var reg 16 + d[15:0] $end
$var reg 3 , add_a[2:0] $end
$var reg 3 - add_b[2:0] $end
$var reg 3 . add_d[2:0] $end
$var reg 1 / wrd $end
$var reg 1 0 clk $end
$comment memory is not handled $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUUUUUUUUUU !
b111 "
b000 #
bUUU $
0%
0&
b1010101010101010 '
b0001000100010001 (
b1010101010101010 )
b0001000100010001 *
bUUUUUUUUUUUUUUUU +
b111 ,
b000 -
bUUU .
0/
00
#1000000000
b110 "
b001 #
b1011101110111011 '
b0000000000000000 (
b1011101110111011 )
b0000000000000000 *
b110 ,
b001 -
#2000000000
b101 "
b010 #
b1100110011001100 '
b1111111111111111 (
b1100110011001100 )
b1111111111111111 *
b101 ,
b010 -
#3000000000
b100 "
b011 #
b1101110111011101 '
b1110111011101110 (
b1101110111011101 )
b1110111011101110 *
b100 ,
b011 -
#4000000000
b011 "
b100 #
b1110111011101110 '
b1101110111011101 (
b1110111011101110 )
b1101110111011101 *
b011 ,
b100 -
#5000000000
b010 "
b101 #
b1111111111111111 '
b1100110011001100 (
b1111111111111111 )
b1100110011001100 *
b010 ,
b101 -
#6000000000
b001 "
b110 #
b0000000000000000 '
b1011101110111011 (
b0000000000000000 )
b1011101110111011 *
b001 ,
b110 -
#7000000000
b000 "
b111 #
b0001000100010001 '
b1010101010101010 (
b0001000100010001 )
b1010101010101010 *
b000 ,
b111 -
#8000000000
b1100101011111110 !
b000 $
1%
1&
b1100101011111110 '
b1100101011111110 )
b1100101011111110 +
b000 .
1/
10
#9000000000
0&
00
#10000000000
b1011111011101111 !
b001 #
b001 $
1&
b1011111011101111 (
b1011111011101111 *
b1011111011101111 +
b001 -
b001 .
10
#11000000000
0&
00
#12000000000
b111 "
b000 #
0%
b1010101010101010 '
b1100101011111110 (
b1010101010101010 )
b1100101011111110 *
b111 ,
b000 -
0/
#13000000000
b110 "
b001 #
b1011101110111011 '
b1011111011101111 (
b1011101110111011 )
b1011111011101111 *
b110 ,
b001 -
#14000000000
b101 "
b010 #
b1100110011001100 '
b1111111111111111 (
b1100110011001100 )
b1111111111111111 *
b101 ,
b010 -
#15000000000
b100 "
b011 #
b1101110111011101 '
b1110111011101110 (
b1101110111011101 )
b1110111011101110 *
b100 ,
b011 -
#16000000000
b011 "
b100 #
b1110111011101110 '
b1101110111011101 (
b1110111011101110 )
b1101110111011101 *
b011 ,
b100 -
#17000000000
b010 "
b101 #
b1111111111111111 '
b1100110011001100 (
b1111111111111111 )
b1100110011001100 *
b010 ,
b101 -
#18000000000
b001 "
b110 #
b1011111011101111 '
b1011101110111011 (
b1011111011101111 )
b1011101110111011 *
b001 ,
b110 -
#19000000000
b000 "
b111 #
b1100101011111110 '
b1010101010101010 (
b1100101011111110 )
b1010101010101010 *
b000 ,
b111 -
#20000000000
